!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector("#card-template"),s=document.querySelector("#editButton"),r=document.querySelector("#editModal"),n=document.querySelector("#addButton"),i=(t.querySelector("#cardDeleteButton"),document.querySelector("#addModal")),o=document.querySelector("#viewPicModal"),a=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#name-input")),l=document.querySelector("#description-input"),c=r.querySelector(".modal__form"),d=r.querySelector(".modal__button"),h=i.querySelector(".modal__form"),u=i.querySelector(".modal__button"),_=(document.querySelector("#place-title"),document.querySelector("#image-link"),o.querySelector(".modal__image"),o.querySelector(".modal__pic-title"),document.querySelector("#avatarButton")),m=document.getElementById("profile__avatar"),p=document.querySelector("#editAvatarModal"),v=p.querySelector(".modal__form"),E=p.querySelector(".modal__button");class S{constructor(e,t,s,r,n){this._name=e.name,this._link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=n}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteClick(this)}))}handleLikeIcon(){this._cardLikeButton.classList.toggle("card__like-button_active")}_renderLikes(){this.isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__text"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._renderLikes(),this._cardElement}}class b{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}addItem=e=>{const t=this._renderer(e);this._container.prepend(t)};renderItems=()=>{this._items.reverse().forEach((e=>{this.addItem(e)}))}}var L=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputEls=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector("#"+e.id+"-error");e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector("#"+e.id+"-error");e.classList.remove(this._inputErrorClass),t.textContent=" ",t.classList.remove(this._errorClass)}_checkInputValidity(e,t){e.validity.valid?this._hideInputError(e,t):this._showInputError(e,t)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(e,t,s){this._hasInvalidInput(e)?this._disableButton(t):this._enableButton(e,t,s)}_setEventListeners(e){this._toggleButtonState(e),this._inputEls.forEach((t=>{t.addEventListener("input",(s=>{this._checkInputValidity(t,e),this._toggleButtonState(this._inputEls,this._submitButton,e)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._disableButton(this._submitButton)}};class f{constructor(e){this._popupElement=document.querySelector(e),this._boundHandleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._boundHandleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._boundHandleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close(),e.target.classList.contains("modal__close")&&this.close()}))}}class k extends f{constructor(e,t){super(e),this._handleFormSubmit=t,this._inputs=this._popupElement.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popupElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const y=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.server=t,this.headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this.server}/cards`,{headers:this.headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this.server}/users/me`,{headers:this.headers}).then(this._checkResponse)}renderCards(){return Promise.all(this.getUserInfo(),this.getInitialCards())}updateProfileInfo(e,t){return fetch(`${this.server}/users/me`,{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this.server}/users/me/avatar`,{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}createCards(e){return fetch(`${this.server}/cards`,{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}deleteCards(e){return fetch(`${this.server}/cards/${e}`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}putCardLike(e){return fetch(`${this.server}/cards/${e}/likes`,{method:"PUT",headers:this.headers}).then(this._checkResponse)}deleteCardLike(e){return fetch(`${this.server}/cards/${e}/likes`,{method:"DELETE",headers:this.headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"ae6b9f6f-b246-460f-9f1b-c55dcebd386d","Content-Type":"application/json"}}),C=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:r}=e;this.name=document.querySelector(t),this.job=document.querySelector(s),this.avatar=document.querySelector(r)}getUserInfo(){return{name:this.name.textContent,job:this.job.textContent,avatar:this.avatar.src}}setUserInfo(e,t){this.name.textContent=e,this.job.textContent=t}setAvatar(e){this.avatar.src=e}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__avatar"}),q=new k("#editModal",(function(e){d.textContent="Saving...",y.updateProfileInfo(e.title,e.description).then((e=>{C.setUserInfo(e.name,e.about),q.close(),d.textContent="Save"})).catch((e=>{console.error(e)}))}));q.setEventListeners();const I=new class extends f{constructor(e){super(e)}open(e){const t=this._popupElement.querySelector(".modal__image"),s=this._popupElement.querySelector(".modal__pic-title");t.src=e._link,t.alt=e._name,s.textContent=e._name,super.open()}}("#viewPicModal");I.setEventListeners();const g=new k("#addModal",(function(e,t){u.textContent="Saving...",y.createCards(e,t).then((e=>{x.addItem(e),g.close(),h.reset(),u.textContent="Save"})).catch((e=>{console.error(e)}))}));g.setEventListeners();const B=new k("#editAvatarModal",(function(e){E.textContent="Saving...",y.updateAvatar(e.link).then((()=>{C.setAvatar(e.link),B.close(),E.textContent="Save"})).catch((e=>{console.error(e)}))}));B.setEventListeners();const w=new class extends f{constructor(e){super(e),this._affirmButton=this._popupElement.querySelector(".modal__button")}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){this._affirmButton.addEventListener("click",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#deleteCardModal");let x,V;function A(e){return V=new S(e,"#card-template",$,(e=>function(e){w.open(),w.setSubmitAction((()=>{y.deleteCards(e._id).then((()=>{w.close(),e.handleDeleteCard()})).catch((e=>{console.error(e)}))}))}(e)),(e=>function(e){!0===e.isLiked?y.deleteCardLike(e._id).then((t=>{e.isLiked=!1,e.handleLikeIcon()})).catch((e=>{console.error(e)})):y.putCardLike(e._id).then((t=>{e.isLiked=!0,e.handleLikeIcon()})).catch((e=>{console.error(e)}))}(e))),V.getView()}function $(e){I.open(e)}w.setEventListeners(),y.getInitialCards().then((e=>{x=new b({items:e,renderer:A},".cards__list"),x.renderItems()})).catch((e=>{console.error(e)})),y.getUserInfo().then((e=>{C.setUserInfo(e.name,e.about),C.setAvatar(e.avatar)})).catch((e=>{console.error(e)})),document.addEventListener("DOMContentLoaded",(function(){const t=new L(e,h),r=new L(e,c),i=new L(e,v);t.enableValidation(),r.enableValidation(),i.enableValidation(),s.addEventListener("click",(()=>{const e=C.getUserInfo();a.value=e.name,l.value=e.job,q.open(),r.resetValidation()})),n.addEventListener("click",(()=>{g.open(),t.resetValidation()})),m.addEventListener("click",(()=>{B.open(),t.resetValidation()})),m.addEventListener("mousemove",(()=>{_.classList.replace("profile__avatar-button_disabled","profile__avatar-button")}))})),m.addEventListener("mouseout",(()=>{_.classList.replace("profile__avatar-button","profile__avatar-button_disabled")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,